/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Problem;

import static Problem.NState.StateMove.OK;
import static Problem.NState.StateMove.SKIP;
import javafx.embed.swing.JFXPanel;
import domainLogic.workflow.algorithms.geneticMining.individual.CMIndividual;
import es.usc.citius.hipster.model.impl.WeightedNode;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Objects;

/**
 *
 * @author marti
 */
public class PantallaSalidaVisual extends javax.swing.JFrame implements InterfazSalida{

    /**
     * Creates new form PantallaSalidaVisual
     */
    public PantallaSalidaVisual() {
        initComponents();
        this.setTitle("Sistema de Análisis de Conformidad");
        this.setSize(1100,750);
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        mejorCamino.setEditable(false);
        modelo.setEditable(false);
        aliEditor.setEditable(false);
        aliEditor.setContentType("text/html");
    }

    public void setModelo(CMIndividual ind) {
        modelo.append(" Imprimir el modelo bien");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        modelo = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        mejorCamino = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tiempoCorto = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        costeCorto = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fitness = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        precission = new javax.swing.JLabel();
        tiempoC = new javax.swing.JLabel();
        coste = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        aliEditor = new javax.swing.JEditorPane();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        modelo.setColumns(20);
        modelo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        modelo.setRows(5);
        jScrollPane2.setViewportView(modelo);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(50, 40, 650, 160);

        mejorCamino.setColumns(20);
        mejorCamino.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        mejorCamino.setRows(2);
        jScrollPane1.setViewportView(mejorCamino);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(50, 240, 650, 70);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Fitness:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(810, 80, 70, 20);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Tiempo Cálculo:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(730, 280, 120, 20);

        tiempoCorto.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tiempoCorto.setText("-");
        getContentPane().add(tiempoCorto);
        tiempoCorto.setBounds(850, 280, 160, 20);

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("MODELO");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(50, 10, 170, 20);

        costeCorto.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        costeCorto.setText("-");
        getContentPane().add(costeCorto);
        costeCorto.setBounds(850, 250, 150, 20);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Precission:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(790, 110, 90, 20);

        fitness.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        fitness.setText("-");
        getContentPane().add(fitness);
        fitness.setBounds(880, 80, 160, 20);

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Coste:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(820, 50, 70, 20);

        precission.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        precission.setText("-");
        getContentPane().add(precission);
        precission.setBounds(880, 110, 160, 20);

        tiempoC.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tiempoC.setText("-");
        getContentPane().add(tiempoC);
        tiempoC.setBounds(880, 140, 130, 20);

        coste.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        coste.setText("-");
        getContentPane().add(coste);
        coste.setBounds(880, 50, 150, 20);

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("Coste Mínimo:");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(740, 250, 120, 20);

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("ALINEAMIENTOS");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(50, 340, 170, 20);

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setText("CAMINO MÁS CORTO");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(50, 210, 170, 20);

        aliEditor.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jScrollPane3.setViewportView(aliEditor);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(50, 380, 910, 260);

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("Tiempo Total Cálculo: ");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(720, 140, 170, 20);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaSalidaVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaSalidaVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaSalidaVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaSalidaVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaSalidaVisual().setVisible(true);
            }
        });
    }

    @Override
    public void minimumSalidaVisual(WeightedNode nodo, Double coste) {
        Iterator it2 = nodo.path().iterator();
        //La primera iteración corresponde con el Estado Inicial
        it2.next();
        mejorCamino.append(" TRAZA    ");
        while (it2.hasNext()) {
            it2.next();
            mejorCamino.append("   |   >>");
        }
        mejorCamino.append("\n MODELO");
        it2 = nodo.path().iterator();
        it2.next();
        while (it2.hasNext()) {
            WeightedNode node = (WeightedNode) it2.next();
            NState.State s = (NState.State) node.state();
            mejorCamino.append("   |   " + s.getTarea() + "  ");
        }
        mejorCamino.append("\n");
        this.costeCorto.setText(coste.toString());
        this.tiempoCorto.setText("");
    }

    @Override
    public void salidaVisual(ArrayList<WeightedNode> nodosSalida, Readers r) {
        String str = "";
        for (int i = 0; i < nodosSalida.size(); i++) {
            Iterator it2 = nodosSalida.get(i).path().iterator();
            //La primera iteración corresponde con el Estado Inicial, que no imprimimos
            it2.next();
            str = str + "<h3> `" + r.getTrazaPos(i).getId() + "´</h3>";
            str = str + "<div> &emsp TRAZA &emsp MODELO";
            while (it2.hasNext()) {
                WeightedNode node = (WeightedNode) it2.next();
                NState.State s = (NState.State) node.state();
                if (node.action().equals(OK)) {
                    str = str + "<br> &emsp &emsp " + r.getTrazaPos(i).leerTarea(s.getPos() - 1) + " &emsp &emsp &emsp " + s.getTarea();                
                } else if (node.action().equals(SKIP)) {
                    str = str + "<br> &emsp &emsp >> &emsp &emsp &ensp " + s.getTarea();
                } else {
                    str = str + "<br> &emsp &emsp " + r.getTrazaPos(i).leerTarea(s.getPos() - 1) + " &emsp &emsp &emsp >> ";
                }
            }
            str = str + "</div>";
            str = str + "<h3> Coste del Alineamiento: " + r.getTrazaPos(i).getScore() + "</h3>";
        }
        this.aliEditor.setText(str);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane aliEditor;
    private javax.swing.JLabel coste;
    private javax.swing.JLabel costeCorto;
    private javax.swing.JLabel fitness;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea mejorCamino;
    private javax.swing.JTextArea modelo;
    private javax.swing.JLabel precission;
    private javax.swing.JLabel tiempoC;
    private javax.swing.JLabel tiempoCorto;
    // End of variables declaration//GEN-END:variables

    @Override
    public void estadisticasModelo(CMIndividual ind, Double coste, long tiempo) {
        this.coste.setText(Objects.toString(coste, null));
        Double fitnes = ind.getFitness().getCompleteness();
        this.fitness.setText(fitnes.toString());       
        Double precision = ind.getFitness().getCompleteness();
        this.precission.setText(precision.toString());
        String t = Objects.toString(tiempo, null);
        this.tiempoC.setText(t + " ms");
    }
}
